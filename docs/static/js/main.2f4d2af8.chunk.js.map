{"version":3,"sources":["services/people-service.js","components/Filters/Filters.js","components/CharacterCard/CharacterCard.js","components/CharacterList/CharacterList.js","components/Home/Home.js","components/Detail/Detail.js","components/App/App.js","index.js"],"names":["fetchPeople","fetch","then","res","json","Filters","_this$props","this","props","onSearch","name","react_default","a","createElement","className","type","id","value","onChange","htmlFor","Component","CharacterCard","image","house","react_router_dom","to","concat","src","alt","CharacterList","people","map","character","key","components_CharacterCard_CharacterCard","Home","components_Filters_Filters","components_CharacterList_CharacterList","filter","toUpperCase","includes","Detail","isLoading","actor","dateOfBirth","ancestry","eyeColour","hairColour","patronus","alive","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","data","handlerUpdateValue","bind","assertThisInitialized","getPeople","_this2","newData","item","index","objectSpread","setState","e","target","console","log","find","parseInt","_this3","react_router","exact","path","render","routerProps","components_Home_Home","match","routeProps","components_Detail_Detail","getCharacter","params","characterId","ReactDOM","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.2f4d2af8.chunk.js","sourcesContent":["const URL = 'http://hp-api.herokuapp.com/api/characters';\n\nconst fetchPeople = () => {\n    return fetch(URL)\n    .then (res => res.json())\n}\nexport default fetchPeople;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './Filters.scss'\n\nclass Filters extends Component {\n    render(){\n        const {onSearch, name}=this.props;\n        return(\n        <form>\n            <fieldset className = \"search-engine__container\">\n                <legend className = \"invitation__title\">Type your favorite character</legend>\n                <input className = \"input__container\"\n                type=\"text\"\n                name=\"search\"\n                id=\"search\"\n                value={name}\n                onChange={onSearch}\n                />\n                <label htmlFor=\"search\"></label>\n            </fieldset>\n        </form>\n        )\n    }\n}\nFilters.propTypes = {\n    onSearch: PropTypes.func.isRequired\n};\n\nexport default Filters;","import React from 'react';\nimport './CharacterCard.scss'\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\n\nconst CharacterCard = props => {\n\n    const {name, image, house, id} = props;\n\n    return (\n        <article className = \"card__container\">\n            <Link \n                to = {`/character-detail/${id}`} \n                className = \"link\"\n            >\n                <h2 className = \"name\">\n                    {name}\n                </h2>\n                <div className = \"image__container\">\n                    <img \n                        className = \"image\"\n                        src={image} \n                        alt={name} \n                    />\n                </div>\n                <h3>\n                    {house}\n                </h3>\n            </Link>\n        </article>\n    )\n}\nCharacterCard.propTypes = { \n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    house: PropTypes.string.isRequired,\n}\nexport default CharacterCard;","import React from \"react\";\nimport \"./CharacterList.scss\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport CharacterCard from \"../CharacterCard/CharacterCard\";\n\n\nconst CharacterList = props => {\n  return (\n    <ul className = \"list\">\n      {props.people.map(character => (\n        <li \n          key = {character.name} \n          className = \"list__item\"\n        >\n            <CharacterCard\n              name = {character.name}\n              image = {character.image}\n              house = {character.house}\n              id = {character.id}\n            />\n\n            <div className = \"link__container\">\n              <Link \n                to = {`/character-detail/${character.id}`} \n                className = \"link-more\"\n              >\n                More about {character.name}\n              </Link>\n            </div>\n\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nCharacterList.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default CharacterList;\n","import React from \"react\";\nimport Filters from \"../Filters/Filters\";\nimport CharacterList from \"../CharacterList/CharacterList\";\n\nconst Home = props => {\n  const { people, name, onSearch } = props;\n\n  return (\n    <div>\n      <header className = \"title\">\n        <h1>\"Harry Potter Characters\"</h1>\n      </header>\n\n      <Filters onSearch = {onSearch} name = {name} />\n\n      <CharacterList\n        people = {people.filter(character =>\n          character.name.toUpperCase().includes(name.toUpperCase())\n        )}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { Component } from 'react';\nimport './Detail.scss'\nimport { Link } from 'react-router-dom';\n\nclass Detail extends Component {\n \n  render() {\n    // const {name, actor, image, house, dateOfBirth, ancestry, eyeColour, hairColour, patronus, alive} = this.props.character;\n    const {isLoading} = this.props;\n    return (\n      <div>\n        {isLoading\n\n        ? (<p>Loading...</p>)\n\n        : (<div className = \"detail-page__container\">\n          <Link to=\"/\" className = \"detail-page__link\" >Back</Link>\n          <div className = \"detail-page__subcontainer\">\n            <h1>{this.props.character.name}</h1>\n            <h2>Played by {this.props.character.actor}</h2>\n            <img className = \"detail-page__image\" src={this.props.character.image} alt={this.props.character.name}/> \n            <section className = \"detail-page__text-container\">\n            <p className = \"detail-page__text\"> \n                <span>{this.props.character.name}</span> is a member of the <span className = \"detail-page__characteristic\">{this.props.character.house}</span> house.\n            </p>\n            <p className = \"detail-page__text\">\n                Born on <span className = \"detail-page__characteristic\">{this.props.character.dateOfBirth}</span>, of <span className = \"detail-page__characteristic\">{this.props.character.ancestry}</span> ancestry, this character has <span className = \"detail-page__characteristic\">{this.props.character.eyeColour}</span> eyes and <span className = \"detail-page__characteristic\">{this.props.character.hairColour}</span> hair.\n            </p>\n            <p className = \"detail-page__text\"> {!this.props.character.patronus ? 'There is no patronus'\n                            : `When ${this.props.character.name} takes the wand to invoke the Patronus Charm, an amazing ${this.props.character.patronus} appears to protect our beloved character.`\n                }\n            </p> \n            <p className = \"detail-page__text\"> {this.props.character.alive === true ? `${this.props.character.name} is still alive.`\n                            : `${this.props.character.name} has unfortunately deceased.`\n                }\n            </p> \n            </section>\n          </div>)\n        </div> )}\n    </div>)\n  }\n}\n\nexport default Detail;","import React, {Component} from 'react';\nimport './App.scss';\nimport fetchPeople from '../../services/people-service';\nimport{Route, Switch} from 'react-router-dom';\nimport Home from '../Home/Home';\nimport Detail from '../Detail/Detail';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      people: {\n        data: [],\n        isLoading: true\n      },\n      filter: {\n        name: '',\n      }\n    };\n    this.handlerUpdateValue = this.handlerUpdateValue.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPeople();\n  }\n\n  getPeople() {\n    fetchPeople()\n    .then(data => {\n      const newData = data.map ((item, index) => {\n        return {\n          ...item, \n          id: index + 1};\n      })\n      this.setState({\n        people: {\n          data: newData,\n          isLoading: false\n        }\n      })\n    }) \n  }\n\n  handlerUpdateValue (e) {\n    const {value} = e.target;\n    this.setState({ \n      filter: {\n        name: value\n      }\n    })\n  }\n\n  getCharacter(id) {\n    const { data } = this.state.people;\n    console.log (data);\n    return data.find(character => \n      character.id === parseInt(id));\n  }\n\n  render () {\n    const {data} = this.state.people;\n    const {name} = this.state.filter;\n    return (\n      <div className = \"App\">\n        <main>\n          <Switch>\n            <Route \n              exact path = \"/\" \n              render = {routerProps => (\n              <Home\n                  match={routerProps.match} \n                  people={data}\n                  name={name}\n                  onSearch={this.handlerUpdateValue}\n                />\n              )}\n            />\n            <Route\n              path = \"/character-detail/:characterId\"\n              render = {routeProps => {\n                return (\n                  <Detail\n                    character = {this.getCharacter(routeProps.match.params.characterId)}\n                    people = {data}\n                    isLoading = {this.state.people.isLoading}\n                  />\n                );\n              }}\n            />\n          </Switch>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./scss/index.scss\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}